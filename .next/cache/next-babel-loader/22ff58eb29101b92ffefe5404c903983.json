{
  "ast": null,
  "code": "import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nvar country = \"Japan\";\nvar originPlace = \"NRT-sky\";\nvar destinationPlace = \"OSAA-sky\";\nvar outboundpartialdate = \"2020-09-01\";\nexport var fetchPlacesData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _yield$axios$get, Places;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/UK/GBP/en-GB/\", {\n              headers: {\n                \"content-type\": \"application/json\",\n                \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"\".concat(process.env.REACT_APP_PlacesDataKey),\n                useQueryString: true\n              },\n              params: {\n                query: \"\".concat(country)\n              }\n            });\n\n          case 3:\n            _yield$axios$get = _context.sent;\n            Places = _yield$axios$get.data.Places;\n            console.log(Places);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function fetchPlacesData() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var fetchRoutesAndQuotesData = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var _yield$axios$get2, _yield$axios$get2$dat, Quotes, Places, Carriers;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return axios.get(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browseroutes/v1.0/US/USD/en-US/\".concat(originPlace, \"/\").concat(destinationPlace, \"/\").concat(outboundpartialdate), {\n              headers: {\n                \"content-type\": \"application/json\",\n                \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"\".concat(process.env.REACT_APP_RoutesDataKey),\n                useQueryString: true\n              }\n            });\n\n          case 3:\n            _yield$axios$get2 = _context2.sent;\n            _yield$axios$get2$dat = _yield$axios$get2.data;\n            Quotes = _yield$axios$get2$dat.Quotes;\n            Places = _yield$axios$get2$dat.Places;\n            Carriers = _yield$axios$get2$dat.Carriers;\n            console.log(Quotes);\n            console.log(Places);\n            console.log(Carriers);\n            _context2.next = 16;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 13]]);\n  }));\n\n  return function fetchRoutesAndQuotesData() {\n    return _ref2.apply(this, arguments);\n  };\n}();",
  "map": {
    "version": 3,
    "sources": [
      "/Users/ethancr0wn/Google Drive/CodeChrysalis/PROJECTS/travelling-rapid-api/pages/api/flights/index.js"
    ],
    "names": [
      "axios",
      "country",
      "originPlace",
      "destinationPlace",
      "outboundpartialdate",
      "fetchPlacesData",
      "get",
      "headers",
      "process",
      "env",
      "REACT_APP_PlacesDataKey",
      "useQueryString",
      "params",
      "query",
      "Places",
      "data",
      "console",
      "log",
      "error",
      "fetchRoutesAndQuotesData",
      "REACT_APP_RoutesDataKey",
      "Quotes",
      "Carriers"
    ],
    "mappings": ";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,OAAO,GAAG,OAAhB;AACA,IAAMC,WAAW,GAAG,SAApB;AACA,IAAMC,gBAAgB,GAAG,UAAzB;AACA,IAAMC,mBAAmB,GAAG,YAA5B;AAEA,OAAO,IAAMC,eAAe;AAAA,sEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIjBL,KAAK,CAACM,GAAN,CACR,0GADQ,EAER;AACEC,cAAAA,OAAO,EAAE;AACP,gCAAgB,kBADT;AAEP,mCACE,uDAHK;AAIP,4CAAqBC,OAAO,CAACC,GAAR,CAAYC,uBAAjC,CAJO;AAKPC,gBAAAA,cAAc,EAAE;AALT,eADX;AAQEC,cAAAA,MAAM,EAAE;AACNC,gBAAAA,KAAK,YAAKZ,OAAL;AADC;AARV,aAFQ,CAJiB;;AAAA;AAAA;AAGjBa,YAAAA,MAHiB,oBAGzBC,IAHyB,CAGjBD,MAHiB;AAoB3BE,YAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AApB2B;AAAA;;AAAA;AAAA;AAAA;AAsB3BE,YAAAA,OAAO,CAACE,KAAR;;AAtB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfb,eAAe;AAAA;AAAA;AAAA,GAArB;AA2BP,OAAO,IAAMc,wBAAwB;AAAA,uEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAI1BnB,KAAK,CAACM,GAAN,oHACoGJ,WADpG,cACmHC,gBADnH,cACuIC,mBADvI,GAER;AACEG,cAAAA,OAAO,EAAE;AACP,gCAAgB,kBADT;AAEP,mCACE,uDAHK;AAIP,4CAAqBC,OAAO,CAACC,GAAR,CAAYW,uBAAjC,CAJO;AAKPT,gBAAAA,cAAc,EAAE;AALT;AADX,aAFQ,CAJ0B;;AAAA;AAAA;AAAA,sDAGlCI,IAHkC;AAG1BM,YAAAA,MAH0B,yBAG1BA,MAH0B;AAGlBP,YAAAA,MAHkB,yBAGlBA,MAHkB;AAGVQ,YAAAA,QAHU,yBAGVA,QAHU;AAiBpCN,YAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACAL,YAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAE,YAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AAnBoC;AAAA;;AAAA;AAAA;AAAA;AAqBpCN,YAAAA,OAAO,CAACC,GAAR;;AArBoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAxBE,wBAAwB;AAAA;AAAA;AAAA,GAA9B",
    "sourcesContent": [
      "import axios from \"axios\";\n\nconst country = \"Japan\";\nconst originPlace = \"NRT-sky\";\nconst destinationPlace = \"OSAA-sky\";\nconst outboundpartialdate = \"2020-09-01\";\n\nexport const fetchPlacesData = async () => {\n  try {\n    const {\n      data: { Places }\n    } = await axios.get(\n      \"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/UK/GBP/en-GB/\",\n      {\n        headers: {\n          \"content-type\": \"application/json\",\n          \"x-rapidapi-host\":\n            \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n          \"x-rapidapi-key\": `${process.env.REACT_APP_PlacesDataKey}`,\n          useQueryString: true\n        },\n        params: {\n          query: `${country}`\n        }\n      }\n    );\n\n    console.log(Places);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n\nexport const fetchRoutesAndQuotesData = async () => {\n  try {\n    const {\n      data: { Quotes, Places, Carriers }\n    } = await axios.get(\n      `https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browseroutes/v1.0/US/USD/en-US/${originPlace}/${destinationPlace}/${outboundpartialdate}`,\n      {\n        headers: {\n          \"content-type\": \"application/json\",\n          \"x-rapidapi-host\":\n            \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n          \"x-rapidapi-key\": `${process.env.REACT_APP_RoutesDataKey}`,\n          useQueryString: true\n        }\n      }\n    );\n\n    console.log(Quotes);\n    console.log(Places);\n    console.log(Carriers);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
